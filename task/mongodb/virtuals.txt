
const productSchema = new Schema<TProduct, TYPProductModel>(
  {
    id: {
      type: String,
      required: [true, 'ID is required'],
      // unique: true,
    },
    password: {
      type: String,
      required: [true, 'AZIR, here need password'],
      maxlength: [20, 'Password can not be more than 20 characters !'],
    },
    name: {
      type: String,
      required: [true, 'hey Azir,  Name is required'],
    },
    description: {
      type: String,
      required: [true, 'Description is required'],
    },
    price: {
      type: Number,
    },
    category: {
      type: String,
      required: [true, 'Category is required'],
    },

    tags: {
      type: [String],
      required: [true, 'Tags is required'],
    },

    variants: {
      type: [variantSchema],
      required: true,
    },

    inventory: {
      type: [inventorySchema],
    },

    isDeleted: {
      type: Boolean,
      default: false,
    },
    viewCount: {
      type: Number,
      default: 0,
    },
  },
  {
    toJSON: {
      virtuals: true,
    },
  },
);

// virtual
productSchema.virtual('myIdeas').get(function () {
  return this.name + this.price;
});
